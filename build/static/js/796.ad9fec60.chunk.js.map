{"version":3,"file":"static/js/796.ad9fec60.chunk.js","mappings":"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","sources":["RecordFantasy/Context/contextRecordFantasy.jsx","RecordFantasy/Record_fantasy.jsx","RecordFantasy/userFantasy.jsx","RecordFantasy/Form_singup .jsx","RecordFantasy/Form_Login.jsx","RecordFantasy/typeOfManAndWoman.jsx","RecordFantasy/RecordFantasyMain.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useReducer } from 'react';\r\nimport { createContext } from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\n////////////////////////////////////\r\nconst ContextRecordFantasy = ({ children }) => {\r\n    const initialState = {\r\n        savedFs: [],\r\n        quantity_SavedFs: -1,\r\n        publishedFs: [],\r\n        quantity_published: -1,\r\n    }\r\n    const reducer = (state, action) => {\r\n        console.log(state.savedFs);\r\n        switch (action.type) {\r\n            case \"add\":\r\n                state.savedFs.push({ fantasy: action.payload, id: state.quantity_SavedFs++ })\r\n                state.quantity_SavedFs++\r\n                return {\r\n                    ...state,\r\n                    savedFs: [...state.savedFs],\r\n                    quantity_SavedFs: state.quantity_SavedFs\r\n                }\r\n            case \"delete\":\r\n                const newSavedFs = state.savedFs.filter(i => i.id !== action.payload)\r\n                state.quantity_SavedFs--;\r\n                console.log(newSavedFs);\r\n                return {\r\n                    ...state,\r\n                    savedFs: [...newSavedFs],\r\n                    quantity_SavedFs: state.quantity_SavedFs\r\n                }\r\n            case \"publish\":\r\n                state.publishedFs.push({ publishedFs: action.payload, id: state.quantity_published++ })\r\n                state.quantity_published++\r\n                return { ...state, publishedFs: state.publishedFs }\r\n\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    const [loading, setLoading] = useState(Boolean);\r\n    const [profileOpen, setProfileOpen] = useState(false)\r\n    const [profilePhoto, setProfilePhoto] = useState(null)\r\n    const [email, setEmail] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [fantasy, setFantasy] = useState('');\r\n    const [userId, setUserId] = useState('');\r\n    const [putNewFantasy, setPutNewFantasy] = useState(false);\r\n    const [like, setLike] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const [openMenu, setOpenMenu] = useState(false);\r\n\r\n\r\n    /// Backend\r\n    const [loginFromBack, setLoginFromBack] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        setPutNewFantasy(false)\r\n\r\n        const fetch = async () => {\r\n            const { data } = await axios.get('http://localhost:3003/login')\r\n            setLoginFromBack(data)\r\n            // setUserId(data.map(i => i.userId))\r\n            // res.data.find(i => i.email === email ? setUserId(i.userId) : null)\r\n\r\n\r\n            // .then(response => response.json())\r\n            // .then(data => setGetFantasyFromBack(data))\r\n            // .catch(error => console.log(error));\r\n        }\r\n        fetch()\r\n    }, [1]);\r\n\r\n    // console.log(userId)\r\n    // console.log(`pass`, pass);\r\n    // console.log(`email`, email);\r\n\r\n    return (\r\n        <StateContext.Provider value={{\r\n            profileOpen, setProfileOpen, pass, setPass, profilePhoto, setProfilePhoto,\r\n            email, setEmail, fantasy, setFantasy, userId, setUserId,\r\n            putNewFantasy, setPutNewFantasy, open, setOpen, loginFromBack, setLoginFromBack,\r\n            state, dispatch, like, setLike, loading, setLoading, openMenu, setOpenMenu\r\n        }}>\r\n            {children}\r\n        </StateContext.Provider >\r\n    );\r\n}\r\n\r\nexport default ContextRecordFantasy;\r\n","import { React, useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { AppBar } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport MapsUgcOutlinedIcon from '@mui/icons-material/MapsUgcOutlined';\r\nimport MenuItem from '@mui/material/MenuItem';\r\n\r\nimport Video1 from '../video/spare your time and.mp4'\r\n\r\n//Context\r\nimport { StateContext } from \"./Context/contextRecordFantasy\"\r\nimport axios from 'axios';\r\n// import GoogleLogin from 'react-google-login';\r\nimport { GoogleLogin, googleLogout, useGoogleLogin } from '@react-oauth/google';\r\nimport jwt from \"jwt-decode\"\r\n\r\n/////////////////////////////////////\r\nconst RecordFantasy = () => {\r\n    const navigate = useNavigate()\r\n    const { fantasy, setFantasy, setPutNewFantasy, setEmail, email,\r\n        like, setLike, profilePhoto, setProfilePhoto, openMenu, setOpenMenu } = useContext(StateContext)\r\n    const [getPublishedFantasyFromBack, setGetPublishedFantasyFromBack] = useState(Array)\r\n\r\n    // const [user, setUser] = useState([]);\r\n    // const [profile, setProfile] = useState([]);\r\n    const [userObj, setUserObj] = useState({});\r\n\r\n    const responseMessage = async response => {\r\n        await setUserObj(jwt(response.credential));\r\n    }\r\n    const errorMessage = error => console.log(error)\r\n\r\n\r\n    // const login_google = useGoogleLogin({\r\n    //     onSuccess: (codeResponse) => setUser(codeResponse),\r\n    //     onError: (error) => console.log('Login Failed:', error)\r\n    // });\r\n\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            const { data } = await axios.get('http://localhost:3003/public')\r\n            // console.log(data);\r\n            setGetPublishedFantasyFromBack(data)\r\n            // .then(response => response.json())\r\n            // .then(data => setGetFantasyFromBack(data))\r\n            // .catch(error => console.log(error));\r\n        }\r\n        fetch()\r\n\r\n        // if (user) {\r\n        //     axios.get(`https://www.googleapis.com/oauth2/v1/userinfo?access_token=${user.access_token}`\r\n        //         , {\r\n        //             headers: {\r\n        //                 Authorization: `Bearer ${user.access_token}`,\r\n        //                 Accept: 'application/json'\r\n        //             }\r\n        //         })\r\n        //         .then((res) => {\r\n        //             setProfile(res.data);\r\n        //         })\r\n        //         .catch((err) => console.log(err));\r\n        // }\r\n\r\n        setEmail(userObj.email); setProfilePhoto(userObj.picture)\r\n\r\n    }, [1]);\r\n\r\n\r\n    // const logOut = () => {\r\n    //     googleLogout();\r\n    //     setProfile(null);\r\n    // };\r\n\r\n    // console.log(user);\r\n    // console.log(profile);\r\n\r\n\r\n\r\n    // console.log(userObj);\r\n    // console.log(userObj.email);\r\n    // console.log(userObj.picture);\r\n    setEmail(userObj.email);\r\n    setProfilePhoto(userObj.picture)\r\n    // console.log(email);\r\n\r\n    email && profilePhoto !== undefined && navigate('/Record_fantasyMain/userFantasy')\r\n\r\n\r\n\r\n    // [...localStorage].map(i => console.log(i))\r\n    // const map = new Map(JSON.parse(localStorage.myMap));\r\n    // localStorage.myMap = JSON.stringify(Array.from(map.entries()));\r\n    // console.log(localStorage);\r\n    console.log(email);\r\n\r\n    return (\r\n        <>\r\n            <AppBar>\r\n                <div className='flex justify-center'>\r\n                    <div className='flex justify-between items-center w-4/5 py-3 '>\r\n                        <Button variant=\"contained\" onClick={() => navigate('/')}>\r\n                            <HomeIcon />\r\n                        </Button>\r\n                        <div className='flex gap-2 items-center'>\r\n                            {/* <div>\r\n                                <Button variant=\"contained\" >\r\n                                    Cell your time and make money \r\n                                </Button>\r\n                            </div> */}\r\n                            <div>\r\n                                <Button variant=\"contained\" onClick={() => navigate(\"/Record_fantasyMain/typeOfManAndWoman\")} >\r\n                                    Type of men and women\r\n                                </Button>\r\n                            </div>\r\n                            <div>\r\n                                <Button> <GoogleLogin onSuccess={responseMessage} onError={errorMessage} /></Button>\r\n                                <div>\r\n                                    {/* <Button variant='contained' onClick={logOut}> LogOut </Button> */}\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div>\r\n                                <Button onClick={() => navigate('/Record_fantasyMain/singUp')} variant=\"contained\">\r\n                                    sing up\r\n                                </Button>\r\n                            </div>\r\n                            <div>\r\n                                <Button onClick={() => navigate('/Record_fantasyMain/login')} variant=\"contained\">\r\n                                    login\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <button variant=\"contained\" onClick={() => setOpenMenu(!openMenu)} className=\"relative \">\r\n                            <Avatar className='ml-2' src={profilePhoto} alt='#' sx={{ width: 32, height: 32 }} />\r\n                            {openMenu &&\r\n                                <div className=\"absolute right-4 border-2 top-9 rounded-lg py-2 px-1 bg-slate-400 \">\r\n                                    <MenuItem onClick={() => { email !== undefined && navigate('/Record_fantasyMain/userFantasy') }}> my profile </MenuItem>\r\n                                    <MenuItem> empty </MenuItem>\r\n                                    <MenuItem> empty </MenuItem>\r\n                                    <MenuItem> empty </MenuItem>\r\n                                    <MenuItem> empty </MenuItem>\r\n                                </div>\r\n                            }\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </AppBar>\r\n\r\n            <div className='mt-28 flex justify-center'>\r\n                <div className='w-4/5'>\r\n                    <p className='text-2xl  '>\r\n                        write your first fantasy\r\n                    </p>\r\n                    <div className='py-3'>\r\n                        <TextField\r\n                            className='w-72'\r\n                            id=\"outlined-textarea\"\r\n                            label=\"\"\r\n                            placeholder=\"write eny things and open-minded\"\r\n                            multiline\r\n                            onChange={e => setFantasy(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Button onClick={() => setPutNewFantasy(true)} variant='contained' >\r\n                            save(as unknown person)\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className='mt-14'>\r\n                        <p className='text-2xl'> fantasy of other people </p>\r\n                        <div className='w-full border-4 rounded-xl p-8 mt-2'>\r\n                            <div>\r\n                                {getPublishedFantasyFromBack.length === 0 ? <div> there is no fantasy </div> :\r\n\r\n                                    getPublishedFantasyFromBack.map(item =>\r\n                                        <div key={item.id} className=\"flex justify-between items-center mt-3 border-t-2\">\r\n                                            {item.publishedFantasy}\r\n                                            <div className=\"flex gap-2 items-center mt-2\">\r\n                                                <button> <MapsUgcOutlinedIcon /> </button>\r\n                                                <button onClick={() => setLike(!like)}> {like ? <FavoriteIcon /> : <FavoriteBorderIcon />} </button>\r\n                                            </div>\r\n                                        </div>)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* <div className='flex justify-center my-5'>\r\n                        <video src={Video1} autoPlay loop muted className='rounded-3xl ' ></video>\r\n                    </div> */}\r\n\r\n                </div>\r\n            </div >\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RecordFantasy;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Alert, AppBar, Button, Snackbar, TextField } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import Clear from '@mui/icons-material/Clear';\r\n// import { useReducer } from 'react';\r\nimport axios from 'axios';\r\n// import { array, string } from 'prop-types';\r\n\r\n/// Context \r\nimport { StateContext } from \"./Context/contextRecordFantasy\"\r\n\r\n////////////////////////\r\nconst UserFantasy = () => {\r\n    const navigate = useNavigate()\r\n    const { profileOpen, setProfileOpen, email, setEmail, profilePhoto, setProfilePhoto,\r\n        fantasy, setFantasy, open, setOpen, userId, setUserId, loading, setLoading } = useContext(StateContext)\r\n\r\n    // const [noFs, setNoFs] = useState(true);\r\n    const [getFantasyFromBack, setGetFantasyFromBack] = useState(Array);\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoading(false)\r\n        const fetch = async () => {\r\n\r\n            const responsive = await axios.get('http://localhost:3003/image')\r\n            const selectRes = responsive.data.filter(i => i.userId === userId)\r\n            const bufferArray = selectRes[0].image.data\r\n            console.log(bufferArray)\r\n            const base64String = window.btoa(String.fromCharCode(...new Uint8Array(bufferArray)))\r\n            setProfilePhoto(`data:image/png;base64,${base64String}`)\r\n\r\n            // const blob = new Blob(bufferArray)\r\n            // const srcBlob = URL.createObjectURL(blob);\r\n            // setProfilePhoto(srcBlob)\r\n            // // const base64Image = Buffer.from(imageBuffer).toString('base64');\r\n\r\n\r\n\r\n            // var arrayBufferView = new Uint8Array( this.response );\r\n            // var blob = new Blob(bufferArray, { type: \"image/png\" });\r\n            // var urlCreator = window.URL || window.webkitURL;\r\n            // const imageUrl = urlCreator.createObjectURL(blob);\r\n            // // var img = document.querySelector(\"#photo\");\r\n            // // img.src = imageUrl;\r\n            // setProfilePhoto(imageUrl)\r\n\r\n            const res = await axios.get('http://localhost:3003/fantasy')\r\n            setGetFantasyFromBack(res.data.filter(i => i.userId === userId))\r\n            // .then(response => response.json())\r\n            // .then(data => setGetFantasyFromBack(data))\r\n            // .catch(error => console.log(error));\r\n        }\r\n        fetch()\r\n        setLoading(true)\r\n    }, [1]);\r\n\r\n    // console.log(getFantasyFromBack.findIndex(i => i.id));\r\n    // console.log(getFantasyFromBack);\r\n    // console.log(email);\r\n    console.log(profilePhoto);\r\n\r\n    //////// set Image\r\n    const imageHandler = (e) => {\r\n        // e.preventDefault();\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(e.target.files[0])\r\n        reader.onloadend = () => setProfilePhoto(reader.result)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar>\r\n                <div className='py-3 flex justify-center'>\r\n                    <div className=\"w-4/5 flex items-center justify-between\">\r\n                        <div> <p className='text-md'> My Fantasy </p> </div>\r\n\r\n                        <div>\r\n                            <Button variant=\"contained\" className='gap-1'>\r\n                                show your character by emoji <PersonIcon />\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-2\">\r\n                            <TextField type=\"file\" variant='standard' onChange={imageHandler}  />\r\n                            <Button variant='contained' onClick={() =>\r\n                                axios.post('http://localhost:3003/image', { userId, profilePhoto }).then((res) => console.log(res))}>\r\n                                Upload\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"relative\">\r\n\r\n                            <Button onClick={() => setProfileOpen(!profileOpen)} variant=\"contained\" className='gap-1'>\r\n                                Profile  <Avatar className='ml-2' src={profilePhoto} alt='#' sx={{ width: 30, height: 30 }} />\r\n                            </Button>\r\n                            {/* <div>\r\n                                <img src={profilePhoto} alt=\"Buffered_Image\" />\r\n                            </div> */}\r\n\r\n                            {profileOpen &&\r\n                                <div className='absolute top-10 bg-slate-500 rounded-md px-3 py-2'>\r\n                                    <div>\r\n                                        <p> userName: {email} </p>\r\n                                        {/* <p>saved Fantasy:  </p> */}\r\n                                    </div>\r\n                                    <div className=\"my-3\">\r\n                                        <Button variant=\"contained\"\r\n                                            onClick={() => {\r\n                                                setEmail(\"\");\r\n                                                // window.location.reload();\r\n                                                navigate('/Record_fantasyMain/')\r\n                                            }}>\r\n                                            log out\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </AppBar>\r\n\r\n            <div className='mt-28 flex justify-center'>\r\n                <div className='w-4/5'>\r\n                    <p className='text-2xl  '>\r\n                        write your first fantasy\r\n                    </p>\r\n                    <div className='py-3'>\r\n                        <TextField\r\n                            className='w-72'\r\n                            id=\"outlined-textarea\"\r\n                            label=\"\"\r\n                            placeholder=\"write eny things and open-minded\"\r\n                            multiline\r\n                            value={fantasy}\r\n                            onChange={e => setFantasy(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Button variant='contained' onClick={() => {\r\n                            axios.post('http://localhost:3003/fantasy', { fantasy: fantasy, id: userId }).then((res) => console.log(res))\r\n                            setFantasy(\"\")\r\n                        }}>\r\n                            save\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className='mt-14'>\r\n                        <p className='text-2xl'> My fantasy </p>\r\n                        <div className=\"w-full border-2 rounded-xl p-8 mt-2\">\r\n\r\n                            {!loading ? <div className=\"flex justify-center\"> <CircularProgress /> </div> :\r\n                                getFantasyFromBack.length === 0 ? <div> you have no fantasy </div> :\r\n                                    getFantasyFromBack.map(item =>\r\n                                        <div key={item.id} className=\"flex justify-between items-center mt-3 border-t-2\">\r\n                                            <p> {getFantasyFromBack.findIndex(i => i.id === item.id) + 1}.  {item.fantasy} </p>\r\n                                            <div className=\"gap-2 flex mt-3\">\r\n                                                <button className=\"bg-green-500 rounded-lg p-2\" onClick={() =>\r\n                                                    axios.post('http://localhost:3003/public', { id: item.userId, fantasy: item.fantasy }).then((res) => console.log(res))\r\n                                                } >\r\n                                                    Public to show\r\n                                                </button>\r\n                                                <button className=\"bg-red-600 rounded-lg p-2\" onClick={() => {\r\n                                                    axios.post('http://localhost:3003/delete', { id: item.id }).then((res) => console.log(res))\r\n                                                    // window.location.reload();                                            // console.log(item.id)\r\n                                                    // dispatch({ type: \"delete\", payload: item.id })\r\n                                                }} >\r\n                                                    delete\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                        <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                            welcome {email}\r\n                        </Alert>\r\n                    </Snackbar>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UserFantasy;\r\n","import { React, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Grid, TextField } from '@mui/material'\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from \"axios\";\r\n// import nodemailer from 'nodemailer'\r\n\r\n//// Context \r\nimport { StateContext } from \"./Context/contextRecordFantasy\"\r\n\r\n// import validate from \"./validate\"\r\nimport { ToastContainer } from 'react-toastify'\r\n// import 'react-tnpm startoastify/dist/ReactToastify.css';\r\n\r\n///////////////////////\r\nconst SingUp = () => {\r\n    const Navigate = useNavigate();\r\n    const { email, setEmail, pass, setPass, setOpen } = useContext(StateContext)\r\n    const { handleSubmit, register, formState: { errors } } = useForm();\r\n\r\n\r\n    // const sendConfirmationEmail = email => {\r\n\r\n    //     axios.post('http://localhost:3003/register', { email: email, pass: pass }).then((res) => console.log(res));\r\n\r\n\r\n    //     // create reusable transporter object using the default SMTP transport\r\n    //     const transporter = nodemailer.createTransport({\r\n    //         host: 'smtp.ethereal.email',\r\n    //         port: 587,\r\n    //         secure: false, // true for 465, false for other ports\r\n    //         auth: {\r\n    //             user: 'reza137997@gmail.com',\r\n    //             pass: '09197116203'\r\n    //             // user: 'your_email@gmail.com', // your email address\r\n    //             // pass: 'your_password' // your email password\r\n    //         }\r\n    //     });\r\n\r\n    //     // send mail with defined transport object\r\n    //     const info = transporter.sendMail({\r\n    //         from: '\"RecordFantasy\" <reza137997@gmail.com>', // sender address\r\n    //         to: email, // list of receivers\r\n    //         subject: 'Confirmation Email Subject', // Subject line\r\n    //         text: 'Confirmation Email Message', // plain text body\r\n    //         html: '<b> Confirmation Email Message </b>' // html body\r\n    //     });\r\n\r\n    //     console.log('Message sent: %s', info.messageId);\r\n    // }\r\n\r\n\r\n    const onSubmit = () => {\r\n        Navigate('/Record_fantasyMain/userFantasy'); setOpen(true);\r\n        axios.post('http://localhost:3003/singUp', { email: email, pass: pass }).then((res) => console.log(res));\r\n        // sendConfirmationEmail()\r\n    }\r\n\r\n    // // const notify = () => toast(\"Wow so easy!\");\r\n    // const notify_success = () => toast.success(\"success\");\r\n    // const notify_error = () => toast.error(\"error\");\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=' px-8 pt-14'>\r\n                <form onSubmit={handleSubmit(onSubmit)}\r\n                    className='shadow-2xl border-2 rounded-lg py-4 my-5'>\r\n\r\n                    <div className='mx-auto w-4/5 '>\r\n                        <div className=' border-t-8 border-b-8 py-7'>\r\n                            <p className='text-2xl  text-start font-bold pb-4'> sing up </p>\r\n\r\n                            <Grid container spacing={2} >\r\n                                <Grid item xs={12} sm={4}>\r\n                                    <TextField\r\n                                        name='email' label='Email' type='email'\r\n                                        onChange={e => setEmail(e.target.value)}\r\n                                        fullWidth required\r\n\r\n                                        {...register(\"email\", {\r\n                                            required: 'required',\r\n                                            // minLength: 5,\r\n                                            pattern: {\r\n                                                // value: /^[A-Za-z]+$/i,\r\n                                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                                message: \"invalid email address\"\r\n                                            }\r\n                                        })}\r\n                                        error={errors?.email}\r\n                                        helperText={errors.email ? errors.email.message : null}\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12} sm={4} >\r\n                                    <TextField name='password' type='password' label='password'\r\n                                        onChange={e => setPass(e.target.value)}\r\n                                        required fullWidth />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n\r\n                        <div className='flex SM:flex-col SM:gap-2 sm:justify-between  py-3'>\r\n                            <button type='submit' className='btn text-white w-52 bg-blue-600 SM:w-full SM:order-2'>\r\n                                save\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SingUp;\r\n\r\n","import { React, useContext, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Grid, TextField } from '@mui/material'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { useForm } from 'react-hook-form';\r\n\r\n//Context\r\nimport { StateContext } from \"./Context/contextRecordFantasy\"\r\n\r\n///////////////////////////\r\nconst Login = () => {\r\n    const Navigate = useNavigate();\r\n    const { handleSubmit, register, formState: { errors } } = useForm();\r\n    const { email, pass, setOpen, setEmail, setPass, userId, setUserId , loginFromBack, setLoginFromBack } = useContext(StateContext)\r\n    const [notFound, setNotFound] = useState(Boolean);\r\n\r\n    const onSubmit = () => {\r\n        loginFromBack.map(i => i.email === email ? setUserId(i.userId) : null)\r\n        loginFromBack.map(i => email === i.email && pass === i.pass ?\r\n            Navigate('/Record_fantasyMain/userFantasy')\r\n            : setNotFound(true))\r\n            setOpen(true);\r\n    }\r\n    // // const notify = () => toast(\"Wow so easy!\");\r\n    // const notify_success = () => toast.success(\"success\");\r\n    // const notify_error = () => toast.error(\"error\");\r\n\r\n    return (\r\n        <>\r\n            <div className=' px-8 pt-14'>\r\n                <form onSubmit={handleSubmit(onSubmit)}\r\n                    className='shadow-2xl border-2 rounded-lg py-4 my-5'>\r\n\r\n                    <div className='mx-auto w-4/5 '>\r\n                        <div className=' border-t-8 border-b-8 py-7'>\r\n                            <p className='text-2xl  text-start font-bold pb-4'> login </p>\r\n\r\n                            <Grid container spacing={2} >\r\n                                <Grid item xs={12} sm={4}>\r\n                                    <TextField\r\n                                        name='email' label='Email' fullWidth required\r\n                                        onChange={e => setEmail(e.target.value)}\r\n\r\n                                    // {...register(\"email\", {\r\n                                    //     required: 'required',\r\n                                    //     // minLength: 5,\r\n                                    //     // pattern: {\r\n                                    //     //     // value: /^[A-Za-z]+$/i,\r\n                                    //     //     value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                    //     //     message: \"invalid email address\"\r\n                                    //     // }\r\n\r\n                                    // })}\r\n                                    // error={errors?.email}\r\n                                    // helperText={errors.email ? errors.email.message : null}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={4} >\r\n                                    <TextField name='password' type='password' label='password' required fullWidth\r\n                                        onChange={e => setPass(e.target.value)}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </div>\r\n\r\n                        <div className='flex SM:flex-col SM:gap-2 sm:justify-between  py-3'>\r\n                            <button type='submit' className='btn text-white w-52 bg-blue-600 SM:w-full SM:order-2'>\r\n                                login\r\n                            </button>\r\n                        </div>\r\n                        {notFound &&\r\n                            <div className=\"flex justify-center bg-red-400 p-2 px-3 rounded-lg\">\r\n                                user not found !\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <ToastContainer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n\r\n","import { AppBar } from '@mui/material';\r\nimport React from 'react';\r\n\r\n/////////////////////\r\nconst TypeOfManAndWoman = () => {\r\n    return (\r\n        <>\r\n            {/* <AppBar>\r\n                <div className='py-3 flex justify-center '>\r\n                    <div className=\"w-4/5 flex items-center justify-between\">\r\n                    </div>\r\n                </div>\r\n            </AppBar> */}\r\n\r\n            <div className=\"mt-10\">\r\n                <div className='flex justify-center'>\r\n                    <div className='w-4/5 border-4 rounded-xl p-8 m-4'>\r\n                        <p className='text-2xl text-start mb-3'> (1) Alpha Male Personality</p>\r\n                        <p className=\"text-lg\"> <span className=\"font-bold\"> Qualities: </span> Self Confident, Outgoing & Enterprising</p>\r\n                        <p className='mt-2'>\r\n                            The alpha male personality type goes with the alias 'bad boy' and alpha males are usually the men who need their men to be men! He's the macho guy,\r\n                            who exudes confidence with a tad bit of aggression, who is outgoing and demanding and definitely very sexist! That in no way means he objectifies women, but he knows for a fact he can get any woman he wishes to.\r\n                            And mostly, he wishes for someone a lot more docile and with a few or no alpha features.\r\n                            He's a little tough to work with because his ego skyrockets anytime he's proven wrong. But he makes up for that through his charming personality.\r\n                            Women will get no comfort or support from an alpha male and if a woman does cheat on her partner she will cheat with an alpha male.\r\n                        </p>\r\n                        <p className=\"text-lg mt-3\">\r\n                            <span className=\"font-bold\"> Perfect Example: </span> Ranveer Singh's character in 'Padmaavat' as Alauddin Khilji\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='w-4/5 border-4 rounded-xl p-8 m-4 mx-auto'>\r\n                    <p className='text-2xl text-start mb-3'> (2) Beta Male Personality </p>\r\n                    <p className=\"text-lg\"> <span className=\"font-bold\"> Qualities: </span> Collaborative & Introvert</p>\r\n                    <p className='mt-2'>\r\n                        Your average 'Mr. nice guy' is the perfect beta male. He's quite moderate in his approach to life and his nice guy personality gets him by.\r\n                        He gets taken for a ride, every now and then because of that, but generally, he's quite likeable.\r\n                        They're definitely more sensitive and less aggressive than an alpha male and a lot more grounded.\r\n                        They take criticism well and show better collaborative skills.\r\n                        The one thing that can intrude their stellar performance as a man is their reserved nature and introvert-like behaviour.\r\n                        They're the guys who were really quiet while in school and a bit nerdy too and were probably bullied about a little.\r\n                        They just grew up to be light-hearted, emotional nice guys, who are also a bit idealistic!\r\n                        Women usually prefer beta males to alpha for a life partner, especially if an alpha has broken her heart.\r\n                        Obviously, she'll go for the nice guy, who won't break her heart. Although, women prefer beta males as friends more than lovers.\r\n                        Yup, beta males make for some excellent friends for the opposite sex!\r\n                    </p>\r\n                    <p className=\"text-lg mt-3\">\r\n                        <span className=\"font-bold\"> Perfect Example: </span> Saif Ali Khan's character as Rohit in 'Kal Ho Na Ho'\r\n                    </p>\r\n                </div>\r\n\r\n                <div className='w-4/5 border-4 rounded-xl p-8 m-4 mx-auto'>\r\n                    <p className='text-2xl text-start mb-3'>  (3) Omega Male Personality </p>\r\n                    <p className=\"text-lg\"> <span className=\"font-bold\"> Qualities: </span>  Eccentric, Kinda Nerdy & Laid Back</p>\r\n                    <p className='mt-2'>\r\n                        So, every Ben Stiller movie you've seen, there's a great example of an Omega male. He has really nerdy habits. Like he may be a collector of something like coins, comic books, insects or even video games. He's highly laid back and lazy and acts like he hasn't a care in the world.\r\n                        He's immature to an extent, irresponsible and definitely lacks ambition. He was also picked a lot in school or college because of his aloof behaviour most times. Omegas are also said to be highly intelligent beings but they don't really act on that. They lack enough ambition to do something about their intelligence. They can solve a complicated math problem while eating a pizza and couldn't give a damn about anything else.\r\n                        They make for lazy husbands who rely on their wife's expenses most times and don't lift a finger to help her with house chores. I know you're silently sitting there and reading this, thinking, 'damn, that's me'.\r\n                    </p>\r\n                    <p className=\"text-lg mt-3\">\r\n                        <span className=\"font-bold\"> Perfect Example: </span> Varun Sharma's character as Choocha in 'Fukrey'\r\n                    </p>\r\n                </div>\r\n\r\n                <div className='w-4/5 border-4 rounded-xl p-8 m-4 mx-auto'>\r\n                    <p className='text-2xl text-start mb-3'> (4) Gamma Male Personality </p>\r\n                    <p className=\"text-lg\"> <span className=\"font-bold\"> Qualities: </span> Adventurous, Fun-Loving & Restless </p>\r\n                    <p className='mt-2'>\r\n                        Gamma males love having fun but don't shrug off their responsibilities at the same time. They're definitely adventurous and fun-loving and tend to get very restless if they're left idle for too long. It is possible an alpha male might mature into a gamma male, because gamma males are a more refined version of them.\r\n                        They're sensitive towards the opposite sex and are very aware of the needs and nature of what women truly want and they do anything in their power to fulfil their partner's needs. Yup, women are lucky to have a gamma male in their life.\r\n                        They also display a certain amount of feminine behaviours, expectations and values to win their partners heart. They love putting their family first, in any given situation and scenario.\r\n                    </p>\r\n                    <p className=\"text-lg mt-3\">\r\n                        <span className=\"font-bold\"> Perfect Example: </span> Shah Rukh Khan's character as Rahul in 'Kabhi Khushi Kabhi Gham'\r\n                    </p>\r\n                </div>\r\n\r\n                <div className='w-4/5 border-4 rounded-xl p-8 m-4 mx-auto'>\r\n                    <p className='text-2xl text-start mb-3'>  (5) Delta Male Personality </p>\r\n                    <p className=\"text-lg\"> <span className=\"font-bold\"> Qualities: </span> Aloof, Resentful & Private </p>\r\n                    <p className='mt-2'>\r\n                        Delta males haven't been faring well in the game of life. They were once alphas or even gammas but probably a tragedy struck hard at some point, and they quietly resigned to their fate and withdrew completely.\r\n                        Extremely private people, deltas are aloof, with an 'I really couldn't care less' attitude and are often resentful towards something or the other. They're not very welcome at social gatherings due to these reasons and are often lonely.\r\n                        A Delta male will attract someone with similar characteristics became if they don't, their partner who might be a gamma, alpha or a beta, will find them extremely boring and dull, unless of course, they change their lifestyle around.\r\n                    </p>\r\n                    <p className=\"text-lg mt-3\">\r\n                        <span className=\"font-bold\"> Perfect Example: </span> Shah Rukh Khan's character as Surinder Suri in 'Rab Ne Bana Di Jodi'\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TypeOfManAndWoman;\r\n","import React from 'react';\r\nimport RecordFantasy from './Record_fantasy'\r\nimport { Routes, Route } from 'react-router-dom';\r\n// import { GoogleOAuthProvider } from '@react-oauth/google';\r\n\r\nimport UserFantasy from './userFantasy';\r\nimport SingUp from './Form_singup '\r\nimport Login from \"./Form_Login\"\r\n\r\n/// context\r\nimport ContextRecordFantasy from \"./Context/contextRecordFantasy\"\r\nimport TypeOfManAndWoman from './typeOfManAndWoman';\r\n\r\n////////////////////////////////\r\nconst RecordFantasyMain = () => {\r\n    return (\r\n        <>\r\n            {/* <GoogleOAuthProvider clientId=\"958087409648-230adphg6efhl7t588o2mqqnoe9vo660.apps.googleusercontent.com\"> */}\r\n            <ContextRecordFantasy>\r\n                <Routes>\r\n                    <Route path=\"/\" element={<RecordFantasy />} ></Route>\r\n                    <Route path=\"/userFantasy\" element={<UserFantasy />} ></Route>\r\n                    <Route path='/singUp' element={<SingUp/>} ></Route>\r\n                    <Route path=\"/login\" element={<Login/>} ></Route>\r\n                    <Route path=\"/typeOfManAndWoman\" element={<TypeOfManAndWoman />} ></Route>\r\n                </Routes>\r\n            </ContextRecordFantasy>\r\n            {/* </GoogleOAuthProvider> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RecordFantasyMain;\r\n"],"names":["StateContext","createContext","_ref","children","_useReducer","useReducer","state","action","console","log","savedFs","type","push","fantasy","payload","id","quantity_SavedFs","_objectSpread","_toConsumableArray","newSavedFs","filter","i","publishedFs","quantity_published","_useReducer2","_slicedToArray","dispatch","_useState","useState","Boolean","_useState2","loading","setLoading","_useState3","_useState4","profileOpen","setProfileOpen","_useState5","_useState6","profilePhoto","setProfilePhoto","_useState7","_useState8","email","setEmail","_useState9","_useState10","pass","setPass","_useState11","_useState12","setFantasy","_useState13","_useState14","userId","setUserId","_useState15","_useState16","putNewFantasy","setPutNewFantasy","_useState17","_useState18","like","setLike","_useState19","_useState20","open","setOpen","_useState21","_useState22","openMenu","setOpenMenu","_useState23","_useState24","loginFromBack","setLoginFromBack","useEffect","fetch","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","sent","stop","apply","arguments","_jsx","Provider","value","navigate","useNavigate","_useContext","useContext","Array","getPublishedFantasyFromBack","setGetPublishedFantasyFromBack","userObj","setUserObj","responseMessage","response","jwt","credential","_x","_callee2","_context2","picture","undefined","_jsxs","_Fragment","AppBar","className","Button","variant","onClick","HomeIcon","GoogleLogin","onSuccess","onError","error","Avatar","src","alt","sx","width","height","MenuItem","TextField","label","placeholder","multiline","onChange","e","target","length","map","item","publishedFantasy","MapsUgcOutlinedIcon","FavoriteIcon","FavoriteBorderIcon","getFantasyFromBack","setGetFantasyFromBack","handleClose","event","reason","responsive","selectRes","bufferArray","base64String","res","image","window","btoa","String","fromCharCode","Uint8Array","concat","PersonIcon","reader","FileReader","readAsDataURL","files","onloadend","result","then","findIndex","CircularProgress","Snackbar","autoHideDuration","onClose","Alert","severity","Navigate","_useForm","useForm","handleSubmit","register","errors","formState","onSubmit","Grid","container","spacing","xs","sm","name","fullWidth","required","pattern","message","helperText","ToastContainer","notFound","setNotFound","ContextRecordFantasy","Routes","Route","path","element","RecordFantasy","UserFantasy","SingUp","Login","TypeOfManAndWoman"],"sourceRoot":""}